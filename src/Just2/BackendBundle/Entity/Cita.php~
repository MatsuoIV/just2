<?php

namespace Citas\BackendBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Gedmo\Mapping\Annotation as Gedmo;

/**
 * @ORM\Table(name="cita")
 * @ORM\Entity()
 */
class Cita {

    /**
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id()
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\ManyToOne(targetEntity="Miembro", inversedBy="citas")
     * @ORM\JoinColumn(name="responsable_id", referencedColumnName="id")
     */
    private $responsable;

    /**
     * @ORM\ManyToOne(targetEntity="Ocasion", inversedBy="citas")
     * @ORM\JoinColumn(name="ocasion_id", referencedColumnName="id")
     */
    private $ocasion;

    /**
     * @ORM\Column(type="text")
     */
    private $detalleCita;

    /**
     * @ORM\Column(name="montoMinimo", type="decimal", scale=2, nullable=false)
     * 
     * @Assert\Regex(pattern="/^[0-9]+(\.\d{1,2})?$/",message="Monto incorrecto.")
     * @Assert\Type(type="float")
     * @Assert\Range(min = 0)
     */
    private $montoMinimo;

    /**
     * @ORM\ManyToOne(targetEntity="Lugar", inversedBy="citas")
     * @ORM\JoinColumn(name="lugar_id", referencedColumnName="id")
     */
    private $lugar;

    /**
     * @ORM\Column(name="fechaCulminacion", type="datetime", nullable=false)
     */
    private $fechaCulminacion;

    /**
     *  @var datetime $fechaCreacion
     *
     * @ORM\Column(name="fechaCreacion", type="datetime")
     * @Gedmo\Timestampable(on="create")
     */
    private $fechaCreacion;

    /**
     * @var datetime $fechaActualizacion
     *
     * @ORM\Column(name="fechaActualizacion", type="datetime")
     * @Gedmo\Timestampable(on="update")
     */
    private $fechaActualizacion;

    /**
     * @ORM\OneToMany(targetEntity="Oferta", mappedBy="cita")
     */
    protected $ofertas;
    
    /**
     * @ORM\Column(type="boolean")
     */
    private $estado;


    /**
     * Constructor
     */
    public function __construct()
    {
        $this->ofertas = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set detalleCita
     *
     * @param string $detalleCita
     * @return Cita
     */
    public function setDetalleCita($detalleCita)
    {
        $this->detalleCita = $detalleCita;
    
        return $this;
    }

    /**
     * Get detalleCita
     *
     * @return string 
     */
    public function getDetalleCita()
    {
        return $this->detalleCita;
    }

    /**
     * Set montoMinimo
     *
     * @param float $montoMinimo
     * @return Cita
     */
    public function setMontoMinimo($montoMinimo)
    {
        $this->montoMinimo = $montoMinimo;
    
        return $this;
    }

    /**
     * Get montoMinimo
     *
     * @return float 
     */
    public function getMontoMinimo()
    {
        return $this->montoMinimo;
    }

    /**
     * Set fechaCulminacion
     *
     * @param \DateTime $fechaCulminacion
     * @return Cita
     */
    public function setFechaCulminacion($fechaCulminacion)
    {
        $this->fechaCulminacion = $fechaCulminacion;
    
        return $this;
    }

    /**
     * Get fechaCulminacion
     *
     * @return \DateTime 
     */
    public function getFechaCulminacion()
    {
        return $this->fechaCulminacion;
    }

    /**
     * Set fechaCreacion
     *
     * @param \DateTime $fechaCreacion
     * @return Cita
     */
    public function setFechaCreacion($fechaCreacion)
    {
        $this->fechaCreacion = $fechaCreacion;
    
        return $this;
    }

    /**
     * Get fechaCreacion
     *
     * @return \DateTime 
     */
    public function getFechaCreacion()
    {
        return $this->fechaCreacion;
    }

    /**
     * Set fechaActualizacion
     *
     * @param \DateTime $fechaActualizacion
     * @return Cita
     */
    public function setFechaActualizacion($fechaActualizacion)
    {
        $this->fechaActualizacion = $fechaActualizacion;
    
        return $this;
    }

    /**
     * Get fechaActualizacion
     *
     * @return \DateTime 
     */
    public function getFechaActualizacion()
    {
        return $this->fechaActualizacion;
    }

    /**
     * Set responsable
     *
     * @param Citas\BackendBundle\Entity\Miembro $responsable
     * @return Cita
     */
    public function setResponsable(\Citas\BackendBundle\Entity\Miembro $responsable = null)
    {
        $this->responsable = $responsable;
    
        return $this;
    }

    /**
     * Get responsable
     *
     * @return Citas\BackendBundle\Entity\Miembro 
     */
    public function getResponsable()
    {
        return $this->responsable;
    }

    /**
     * Set ocasion
     *
     * @param Citas\BackendBundle\Entity\Ocasion $ocasion
     * @return Cita
     */
    public function setOcasion(\Citas\BackendBundle\Entity\Ocasion $ocasion = null)
    {
        $this->ocasion = $ocasion;
    
        return $this;
    }

    /**
     * Get ocasion
     *
     * @return Citas\BackendBundle\Entity\Ocasion 
     */
    public function getOcasion()
    {
        return $this->ocasion;
    }

    /**
     * Set lugar
     *
     * @param Citas\BackendBundle\Entity\Lugar $lugar
     * @return Cita
     */
    public function setLugar(\Citas\BackendBundle\Entity\Lugar $lugar = null)
    {
        $this->lugar = $lugar;
    
        return $this;
    }

    /**
     * Get lugar
     *
     * @return Citas\BackendBundle\Entity\Lugar 
     */
    public function getLugar()
    {
        return $this->lugar;
    }

    /**
     * Add ofertas
     *
     * @param Citas\BackendBundle\Entity\Oferta $ofertas
     * @return Cita
     */
    public function addOferta(\Citas\BackendBundle\Entity\Oferta $ofertas)
    {
        $this->ofertas[] = $ofertas;
    
        return $this;
    }

    /**
     * Remove ofertas
     *
     * @param Citas\BackendBundle\Entity\Oferta $ofertas
     */
    public function removeOferta(\Citas\BackendBundle\Entity\Oferta $ofertas)
    {
        $this->ofertas->removeElement($ofertas);
    }

    /**
     * Get ofertas
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getOfertas()
    {
        return $this->ofertas;
    }

    /**
     * Set estado
     *
     * @param boolean $estado
     * @return Cita
     */
    public function setEstado($estado)
    {
        $this->estado = $estado;
    
        return $this;
    }

    /**
     * Get estado
     *
     * @return boolean 
     */
    public function getEstado()
    {
        return $this->estado;
    }
}